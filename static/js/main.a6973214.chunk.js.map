{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","components/Credit.js","App.js","reportWebVitals.js","index.js"],"names":["pointer","cursor","PlayerContainer","styled","div","TimeControlContainer","Track","p","currentSong","color","AnimateTrack","Math","round","songInfo","currentTime","duration","Input","input","P","PlayControlContainer","Player","setCurrentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songs","setSongs","getTime","time","minute","floor","second","slice","skipTrackHandler","direction","console","log","currentIndex","findIndex","song","id","length","activeLibraryHandler","current","play","newSong","newSongs","map","active","onChange","e","target","value","min","max","type","onClick","className","icon","faAngleLeft","size","style","pause","playPromise","undefined","then","_","catch","error","faPause","faPlay","faAngleRight","SongContainer","Img","img","H1","h2","H2","h3","Song","src","cover","alt","name","artist","LibrarySongContainer","isActive","LibrarySongDescription","h4","LibrarySong","songSelectHandler","curSong","LibraryContainer","libraryStatus","Library","NavContainer","h1","Button","button","Nav","setLibraryStatus","faHeart","faMusic","CreditContainer","Link","a","Credit","href","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storageRef","storage","ref","AppContainer","App","useRef","useState","isLoading","setIsLoading","updateTimeHandler","songEndHandler","nextSong","fetchData","listAll","listData","_delegate","items","musicList","forEach","item","index","child","_location","path_","getDownloadURL","res","split","audio","uuidv4","err","useEffect","alignItems","display","justifyContent","class","onLoadedMetadata","onTimeUpdate","onEnded","autoPlay","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Sentry","dsn","integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6973214.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleLeft,\n  faAngleRight,\n  faPlay,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\n\n// style\nconst pointer = { cursor: \"pointer\" };\n\nconst Player = ({\n  currentSong,\n  setCurrentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  songInfo,\n  setSongInfo,\n  songs,\n  setSongs,\n}) => {\n  // Event handlers\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      console.log(audioRef.current);\n      let playPromise = audioRef.current.play();\n      console.log(playPromise);\n      if (playPromise !== undefined) {\n        playPromise\n          .then((_) => {\n            audioRef.current.play();\n          })\n          .catch((error) => {\n            audioRef.current.play();\n          });\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const togglePlayPauseIcon = () => {\n    if (isPlaying) {\n      return faPause;\n    } else {\n      return faPlay;\n    }\n  };\n\n  const getTime = (time) => {\n    let minute = Math.floor(time / 60);\n    let second = (\"0\" + Math.floor(time % 60)).slice(-2);\n    return `${minute}:${second}`;\n  };\n\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const skipTrackHandler = async (direction) => {\n    console.log(songs);\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n    } else if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        activeLibraryHandler(songs[songs.length - 1]);\n      } else {\n        await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n        activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n      }\n    }\n    if (isPlaying) {\n      console.log(audioRef.current);\n      audioRef.current.play();\n    }\n  };\n\n  const activeLibraryHandler = (newSong) => {\n    const newSongs = songs?.map((song) => {\n      if (song?.id === newSong?.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  };\n\n  return (\n    <PlayerContainer>\n      <TimeControlContainer>\n        <P>{getTime(songInfo.currentTime || 0)}</P>\n        {currentSong && (\n          <Track currentSong={currentSong}>\n            <Input\n              onChange={dragHandler}\n              min={0}\n              max={songInfo.duration || 0}\n              value={songInfo.currentTime}\n              type=\"range\"\n            />\n            <AnimateTrack songInfo={songInfo}></AnimateTrack>\n          </Track>\n        )}\n\n        <P>{getTime(songInfo.duration || 0)}</P>\n      </TimeControlContainer>\n\n      <PlayControlContainer>\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          icon={faAngleLeft}\n          size=\"2x\"\n          style={pointer}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          icon={togglePlayPauseIcon()}\n          size=\"2x\"\n          style={pointer}\n        />\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n          className=\"skip-forward\"\n          icon={faAngleRight}\n          size=\"2x\"\n          style={pointer}\n        />\n      </PlayControlContainer>\n    </PlayerContainer>\n  );\n};\n\nconst PlayerContainer = styled.div`\n  min-height: 20vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst TimeControlContainer = styled.div`\n  margin-top: 5vh;\n  width: 50%;\n  display: flex;\n  @media screen and (max-width: 768px) {\n    width: 90%;\n  }\n`;\n\nconst Track = styled.div`\n  background: lightblue;\n  width: 100%;\n  height: 1rem;\n  position: relative;\n  border-radius: 1rem;\n  overflow: hidden;\n  background: linear-gradient(\n    to right,\n    ${(p) => p?.currentSong?.color[0] ?? \"\"},\n    ${(p) => p?.currentSong?.color[1] ?? \"\"}\n  );\n`;\n\nconst AnimateTrack = styled.div`\n  background: rgb(204, 204, 204);\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: translateX(\n    ${(p) =>\n      Math.round((p.songInfo.currentTime * 100) / p.songInfo.duration) + \"%\"}\n  );\n  pointer-events: none;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  -webkit-appearance: none;\n  background: transparent;\n  cursor: pointer;\n  /* padding-top: 1rem;\n\tpadding-bottom: 1rem; */\n  &:focus {\n    outline: none;\n    -webkit-appearance: none;\n  }\n  @media screen and (max-width: 768px) {\n    &::-webkit-slider-thumb {\n      height: 48px;\n      width: 48px;\n    }\n  }\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: 16px;\n    width: 16px;\n    background: transparent;\n    border: none;\n  }\n  &::-moz-range-thumb {\n    -webkit-appearance: none;\n    background: transparent;\n    border: none;\n  }\n  &::-ms-thumb {\n    -webkit-appearance: none;\n    background: transparent;\n    border: none;\n  }\n  &::-moz-range-thumb {\n    -webkit-appearance: none;\n    background: transparent;\n    border: none;\n  }\n`;\n\nconst P = styled.p`\n  padding: 0 1rem 0 1rem;\n  user-select: none;\n`;\n\nconst PlayControlContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n  width: 30%;\n  @media screen and (max-width: 768px) {\n    width: 60%;\n  }\n`;\n\nexport default Player;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Song = ({ currentSong }) => {\n\treturn (\n\t\t<SongContainer>\n\t\t\t<Img src={currentSong?.cover ?? ''} alt={currentSong?.name ?? ''}></Img>\n\t\t\t<H1>{currentSong?.name ?? ''}</H1>\n\t\t\t<H2>{currentSong?.artist ?? ''}</H2>\n\t\t</SongContainer>\n\t);\n};\n\nconst SongContainer = styled.div`\n\tmargin-top: 10vh;\n\tmin-height: 50vh;\n\tmax-height: 60vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nconst Img = styled.img`\n\twidth: 20%;\n\tborder-radius: 50%;\n\t@media screen and (max-width: 768px) {\n\t\twidth: 50%;\n\t}\n`;\n\nconst H1 = styled.h2`\n\tpadding: 3rem 1rem 1rem 1rem;\n`;\n\nconst H2 = styled.h3`\n\tfont-size: 1rem;\n`;\n\nexport default Song;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst LibrarySong = ({\n  song,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  songs,\n  setSongs,\n}) => {\n  // Function\n  const songSelectHandler = async () => {\n    await setCurrentSong(song);\n    const curSong = song;\n    const songList = songs;\n\n    const newSongs = songList.map((song) => {\n      if (song.id === curSong.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n\n    // check if user is wanting to play a song.\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n\n  return (\n    <LibrarySongContainer onClick={songSelectHandler} isActive={song.active}>\n      <Img src={song.cover} alt={song.name}></Img>\n      <LibrarySongDescription>\n        <H1>{song.name}</H1>\n        <H2>{song.artist}</H2>\n      </LibrarySongDescription>\n    </LibrarySongContainer>\n  );\n};\nconst LibrarySongContainer = styled.div`\n  padding: 0 2rem 0 2rem;\n  height: 100px;\n  width: 100%;\n  display: flex;\n  transition: all 0.3s ease;\n  background-color: ${(p) => (p.isActive ? \"pink\" : \"white\")};\n  &:hover {\n    background-color: lightblue;\n    transition: all 0.3s ease;\n  }\n  &.active {\n    background-color: pink;\n  }\n`;\n\nconst LibrarySongDescription = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Img = styled.img`\n  margin: 20px 0;\n  height: 60px;\n`;\n\nconst H1 = styled.h3`\n  padding-left: 1rem;\n  font-size: 1rem;\n`;\n\nconst H2 = styled.h4`\n  padding-left: 1rem;\n  font-size: 0.7rem;\n`;\n\nexport default LibrarySong;\n","import React from \"react\";\nimport LibrarySong from \"./LibrarySong\";\nimport styled from \"styled-components\";\n\nconst Library = ({\n  songs,\n  currentSong,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setSongs,\n  libraryStatus,\n}) => {\n  return (\n    <LibraryContainer libraryStatus={libraryStatus}>\n      <H1>Library</H1>\n      <SongContainer>\n        {songs.map((song) => (\n          <LibrarySong\n            song={song}\n            songs={songs}\n            setCurrentSong={setCurrentSong}\n            key={song.id}\n            audioRef={audioRef}\n            isPlaying={isPlaying}\n            setSongs={setSongs}\n          />\n        ))}\n      </SongContainer>\n    </LibraryContainer>\n  );\n};\nconst LibraryContainer = styled.div`\n  position: fixed;\n  z-index: 9;\n  top: 0;\n  left: 0;\n  width: 20rem;\n  height: 100%;\n  background-color: white;\n  box-shadow: 2px 2px 50px rgb(204, 204, 204);\n  user-select: none;\n  overflow: scroll;\n  transform: translateX(${(p) => (p.libraryStatus ? \"0%\" : \"-100%\")});\n  transition: all 0.5s ease;\n  opacity: ${(p) => (p.libraryStatus ? \"100\" : \"0\")};\n  scrollbar-width: thin;\n  scrollbar-color: rgba(155, 155, 155, 0.5) tranparent;\n  &::-webkit-scrollbar {\n    width: 5px;\n  }\n  &::-webkit-scrollbar-track {\n    background: transparent;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(155, 155, 155, 0.5);\n    border-radius: 20px;\n    border: transparent;\n  }\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    z-index: 9;\n  }\n`;\n\nconst SongContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n`;\n\nconst H1 = styled.h2`\n  padding: 2rem;\n`;\n\nexport default Library;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic, faHeart } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\n\treturn (\n\t\t<NavContainer>\n\t\t\t<H1 libraryStatus={libraryStatus}>Relax</H1>\n\t\t\t<Button onClick={() => setLibraryStatus(!libraryStatus)}>\n\t\t\t\tMy Faforites{' '} <FontAwesomeIcon icon={faHeart} />\n\t\t\t</Button>\n\t\t\t<Button onClick={() => setLibraryStatus(!libraryStatus)}>\n\t\t\t\tLibrary{' '} <FontAwesomeIcon icon={faMusic} />\n\t\t\t</Button>\n\t\t</NavContainer>\n\t);\n};\n\nconst NavContainer = styled.div`\n\tmin-height: 10vh;\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\t@media screen and (max-width: 768px) {\n\t\tposition: fixed;\n\t\tz-index: 10;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t}\n`;\n\nconst H1 = styled.h1`\n\ttransition: all 0.5s ease;\n\n\t@media screen and (max-width: 768px) {\n\t\tvisibility: ${(p) => (p.libraryStatus ? \"hidden\" : \"visible\")};\n\t\topacity: ${(p) => (p.libraryStatus ? \"0\" : \"100\")};\n\t\ttransition: all 0.5s ease;\n\t}\n`;\n\nconst Button = styled.button`\n\tbackground: transparent;\n\tborder: none;\n\tcursor: pointer;\n\tborder: 2px solid rgb(65, 65, 65);\n\tpadding: 0.5rem;\n\ttransition: all 0.3s ease;\n\t&:hover {\n\t\tbackground: rgb(65, 65, 65);\n\t\tcolor: white;\n\t}\n`;\n\nexport default Nav;\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst Credit = () => {\n\treturn (\n\t\t<CreditContainer>\n\t\t\t<Link href=\"https://www.facebook.com/cntuan90/\" target=\"_blank\">\n\t\t\t\tMade by TuanSteve\n\t\t\t</Link>\n\t\t\t{/* <br></br>\n\t\t\t<Link href=\"https://github.com/WilsonLe/react-music-player\" target=\"_blank\">\n\t\t\t\tGithub repository\n\t\t\t</Link> */}\n\t\t</CreditContainer>\n\t);\n};\n\nconst CreditContainer = styled.div`\n\tuser-select: none;\n\tposition: fixed;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-end;\n\tjustify-content: flex-end;\n\tz-index: 12;\n\tbottom: 5px;\n\tright: 5px;\n\tcolor: rgb(155, 155, 155);\n\tfont-size: 0.75rem;\n`;\n\nconst Link = styled.a`\n\tcolor: rgb(155, 155, 155);\n`;\nexport default Credit;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport firebase from \"firebase\";\n\n// Import components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\nimport Credit from \"./components/Credit\";\n\nconst fisebaseconfig = {\n  apiKey: \"AIzaSyCw8WrcduX9qtCjjxFv6qbbWa_ab7WSM04\",\n  authDomain: \"music-player-a17a6.firebaseapp.com\",\n  projectId: \"music-player-a17a6\",\n  storageBucket: \"music-player-a17a6.appspot.com\",\n  messagingSenderId: \"894050940131\",\n  appId: \"1:894050940131:web:f6bf7c2a1bc0dd309c81d6\",\n  measurementId: \"G-LT9YZWXZWY\",\n};\n// Initialize Firebase\nconst app = firebase.initializeApp(fisebaseconfig);\nconst storage = firebase.storage(app);\nconst storageRef = storage.ref();\n\nconst App = () => {\n  // Ref\n  const audioRef = useRef(null);\n\n  // State\n  const [isLoading, setIsLoading] = useState(true);\n  const [songs, setSongs] = useState([]);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n\n  // Functions\n  const updateTimeHandler = (e) => {\n    const currentTime = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo, currentTime, duration });\n  };\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    let nextSong = songs[(currentIndex + 1) % songs.length];\n    await setCurrentSong(nextSong);\n\n    const newSongs = songs.map((song) => {\n      if (song.id === nextSong.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n\n  const fetchData = async () => {\n    const listData = await storageRef.listAll();\n    if (listData?._delegate?.items.length === 0) return;\n    try {\n      let musicList = [];\n      listData?._delegate?.items.forEach(async (item, index) => {\n        const res = await storageRef\n          .child(`${item?._location.path_}`)\n          .getDownloadURL();\n        musicList = [\n          ...musicList,\n          {\n            name: item?._location.path_.split(\".\")[0],\n            cover:\n              \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n            audio: res ?? \"\",\n            artist: \"\",\n            color: [\"#205950\", \"#2ab3bf\"],\n            id: uuidv4(),\n            active: false,\n          },\n        ];\n\n        musicList[0].active = true;\n        setSongs(musicList);\n        setCurrentSong(musicList[0]);\n        setIsLoading(false);\n      });\n    } catch (err) {\n      err && console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return !isLoading ? (\n    <AppContainer libraryStatus={libraryStatus}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        setSongs={setSongs}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <Credit />\n      <audio\n        onLoadedMetadata={updateTimeHandler}\n        onTimeUpdate={updateTimeHandler}\n        onEnded={songEndHandler}\n        autoPlay={true}\n        ref={audioRef}\n        src={currentSong?.audio ?? \"\"}\n      />\n    </AppContainer>\n  ) : (\n    <div\n      style={{\n        alignItems: \"center\",\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <div class=\"loadingio-spinner-ellipsis-0ghojfxl5daq\">\n        <div class=\"ldio-h5clqrkxu4p\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst AppContainer = styled.div`\n  transition: all 0.5s ease;\n  margin-left: ${(p) => (p.libraryStatus ? \"20rem\" : \"0\")};\n  @media screen and (max-width: 768px) {\n    margin-left: 0;\n  }\n`;\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/react\";\nimport { BrowserTracing } from \"@sentry/tracing\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nSentry.init({\n  dsn: \"https://77986cca38d844cba091280955028c5c@o1301982.ingest.sentry.io/6539015\",\n  integrations: [new BrowserTracing()],\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}